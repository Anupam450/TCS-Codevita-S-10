#include <bits/stdc++.h>

using namespace std;

vector<string> cnvrtFunction(vector<vector<string>> mat, int n, int m){
    vector<string> v;
    for(int i=0; i<m; i++){
  if(i&1){
   for(int j=n-1; j>=0; j--){
    v.push_back(mat[i][j]);
   }
  }else{
   for(int j=0; j<n; j++){
    v.push_back(mat[i][j]);
   }
  }
 }
    return v;
}

pair<int, int> print(vector<string> v, int n, int m, string res){
    pair<int, int> pos = {-1, -1};
    for(int i=0; i<m; i++){
  for(int j=0; j<n; j++){
   int idx = i*n + (i&1?n-1-j:j);
   if(v[idx] == res) {
    pos.first = idx/n;
    pos.second = (i&1)?n-1-idx%n:(idx%n);
   }
   cout << v[idx] << ' ';
  }
  cout << '\n';
 }

    return pos;
}

int main(){
 int m, n, r;
 cin >> m >> n;
 string res;
 vector<vector<string>> mat(m, vector<string>(n));
 for(int i=0; i<m; i++){
  for(int j=0; j<n; j++){
   cin >> mat[i][j];
  }
 }
 cin >> r >> res;
 vector<string> v = cnvrtFunction(mat, n, m);
 
    r = r%(m*n);
    for(int i=m*n-r, j=m*n-1; i<j; i++, j--) swap(v[i], v[j]);
    for(int i=0, j=m*n-r-1; i<j; i++, j--) swap(v[i], v[j]);
    for(int i=0, j=m*n-1; i<j; i++, j--) swap(v[i], v[j]);

    pair<int, int> pos = {-1, -1};
 pos = print(v, n, m, res);

 if(pos.first==-1){
  cout << "Not Available";
 }else
 cout << "[" <<  pos.first << ", " << pos.second << "]";
}